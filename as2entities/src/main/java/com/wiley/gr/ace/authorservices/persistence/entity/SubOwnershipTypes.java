package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Aug 5, 2015 12:05:24 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SubOwnershipTypes generated by hbm2java
 */
@Entity
@Table(name = "SUB_OWNERSHIP_TYPES")
public class SubOwnershipTypes implements java.io.Serializable {

	private String subTypeCd;
	private OwnershipTypes ownershipTypes;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private String subTypeName;
	private Date createdDate;
	private Date updatedDate;

	public SubOwnershipTypes() {
	}

	public SubOwnershipTypes(String subTypeCd) {
		this.subTypeCd = subTypeCd;
	}

	public SubOwnershipTypes(String subTypeCd, OwnershipTypes ownershipTypes,
			Users usersByCreatedBy, Users usersByUpdatedBy, String subTypeName,
			Date createdDate, Date updatedDate) {
		this.subTypeCd = subTypeCd;
		this.ownershipTypes = ownershipTypes;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.subTypeName = subTypeName;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "SUB_TYPE_CD", unique = true, nullable = false, length = 50)
	public String getSubTypeCd() {
		return this.subTypeCd;
	}

	public void setSubTypeCd(String subTypeCd) {
		this.subTypeCd = subTypeCd;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OWNERSHIP_TYPE_CD")
	public OwnershipTypes getOwnershipTypes() {
		return this.ownershipTypes;
	}

	public void setOwnershipTypes(OwnershipTypes ownershipTypes) {
		this.ownershipTypes = ownershipTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@Column(name = "SUB_TYPE_NAME", length = 250)
	public String getSubTypeName() {
		return this.subTypeName;
	}

	public void setSubTypeName(String subTypeName) {
		this.subTypeName = subTypeName;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
