package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Sep 24, 2015 5:21:06 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserFunders generated by hbm2java
 */
@Entity
@Table(name = "user_funders", catalog = "as2_app_db")
public class UserFunders implements java.io.Serializable {

	private Long userFunderId;
	private ResearchFunders researchFunders;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private UserProfile userProfile;
	private Date createdDate;
	private Date updatedDate;
	private Set<UserFunderGrants> userFunderGrantses = new HashSet<UserFunderGrants>(
			0);

	public UserFunders() {
	}

	public UserFunders(ResearchFunders researchFunders, Users usersByCreatedBy,
			Users usersByUpdatedBy, UserProfile userProfile, Date createdDate,
			Date updatedDate, Set<UserFunderGrants> userFunderGrantses) {
		this.researchFunders = researchFunders;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.userProfile = userProfile;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.userFunderGrantses = userFunderGrantses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "USER_FUNDER_ID", unique = true, nullable = false)
	public Long getUserFunderId() {
		return this.userFunderId;
	}

	public void setUserFunderId(Long userFunderId) {
		this.userFunderId = userFunderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RESFUNDERID")
	public ResearchFunders getResearchFunders() {
		return this.researchFunders;
	}

	public void setResearchFunders(ResearchFunders researchFunders) {
		this.researchFunders = researchFunders;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID")
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userFunders")
	public Set<UserFunderGrants> getUserFunderGrantses() {
		return this.userFunderGrantses;
	}

	public void setUserFunderGrantses(Set<UserFunderGrants> userFunderGrantses) {
		this.userFunderGrantses = userFunderGrantses;
	}

}
