package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Sep 24, 2015 5:21:06 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ResearchFunders generated by hbm2java
 */
@Entity
@Table(name = "research_funders", catalog = "as2_app_db")
public class ResearchFunders implements java.io.Serializable {

	private Long resfunderid;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private String funderDoi;
	private String funderName;
	private Date createdDate;
	private Date updatedDate;
	private Set<UserFunders> userFunderses = new HashSet<UserFunders>(0);

	public ResearchFunders() {
	}

	public ResearchFunders(Users usersByCreatedBy, Users usersByUpdatedBy,
			String funderDoi, String funderName, Date createdDate,
			Date updatedDate, Set<UserFunders> userFunderses) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.funderDoi = funderDoi;
		this.funderName = funderName;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.userFunderses = userFunderses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "RESFUNDERID", unique = true, nullable = false)
	public Long getResfunderid() {
		return this.resfunderid;
	}

	public void setResfunderid(Long resfunderid) {
		this.resfunderid = resfunderid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@Column(name = "FUNDER_DOI", length = 50)
	public String getFunderDoi() {
		return this.funderDoi;
	}

	public void setFunderDoi(String funderDoi) {
		this.funderDoi = funderDoi;
	}

	@Column(name = "FUNDER_NAME", length = 250)
	public String getFunderName() {
		return this.funderName;
	}

	public void setFunderName(String funderName) {
		this.funderName = funderName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "researchFunders")
	public Set<UserFunders> getUserFunderses() {
		return this.userFunderses;
	}

	public void setUserFunderses(Set<UserFunders> userFunderses) {
		this.userFunderses = userFunderses;
	}

}
