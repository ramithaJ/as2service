package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Oct 12, 2015 11:27:32 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * OrderReference generated by hbm2java
 */
@Entity
@Table(name = "order_reference", catalog = "as2_app_db")
public class OrderReference implements java.io.Serializable {

	private long orderId;
	private Orders orders;
	private Long oouniqueId;
	private Long ecoreSubscriptionNum;
	private Long ecoreSequenceNum;
	private Date createdDate;
	private byte[] createdBy;
	private Date updatedDate;
	private byte[] updatedBy;

	public OrderReference() {
	}

	public OrderReference(Orders orders) {
		this.orders = orders;
	}

	public OrderReference(Orders orders, Long oouniqueId,
			Long ecoreSubscriptionNum, Long ecoreSequenceNum, Date createdDate,
			byte[] createdBy, Date updatedDate, byte[] updatedBy) {
		this.orders = orders;
		this.oouniqueId = oouniqueId;
		this.ecoreSubscriptionNum = ecoreSubscriptionNum;
		this.ecoreSequenceNum = ecoreSequenceNum;
		this.createdDate = createdDate;
		this.createdBy = createdBy;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "orders"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "ORDER_ID", unique = true, nullable = false)
	public long getOrderId() {
		return this.orderId;
	}

	public void setOrderId(long orderId) {
		this.orderId = orderId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@Column(name = "OOUNIQUE_ID")
	public Long getOouniqueId() {
		return this.oouniqueId;
	}

	public void setOouniqueId(Long oouniqueId) {
		this.oouniqueId = oouniqueId;
	}

	@Column(name = "ECORE_SUBSCRIPTION_NUM")
	public Long getEcoreSubscriptionNum() {
		return this.ecoreSubscriptionNum;
	}

	public void setEcoreSubscriptionNum(Long ecoreSubscriptionNum) {
		this.ecoreSubscriptionNum = ecoreSubscriptionNum;
	}

	@Column(name = "ECORE_SEQUENCE_NUM")
	public Long getEcoreSequenceNum() {
		return this.ecoreSequenceNum;
	}

	public void setEcoreSequenceNum(Long ecoreSequenceNum) {
		this.ecoreSequenceNum = ecoreSequenceNum;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CREATED_BY")
	public byte[] getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(byte[] createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "UPDATED_BY")
	public byte[] getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(byte[] updatedBy) {
		this.updatedBy = updatedBy;
	}

}
