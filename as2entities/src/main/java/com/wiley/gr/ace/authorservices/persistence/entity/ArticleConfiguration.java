package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Sep 24, 2015 5:21:06 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ArticleConfiguration generated by hbm2java
 */
@Entity
@Table(name = "article_configuration", catalog = "as2_app_db")
public class ArticleConfiguration implements java.io.Serializable {

	private long dhId;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private Products products;
	private Character prodTrkPathArticle;
	private String notes;
	private Date createdDate;
	private Date updatedDate;

	public ArticleConfiguration() {
	}

	public ArticleConfiguration(Products products) {
		this.products = products;
	}

	public ArticleConfiguration(Users usersByCreatedBy, Users usersByUpdatedBy,
			Products products, Character prodTrkPathArticle, String notes,
			Date createdDate, Date updatedDate) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.products = products;
		this.prodTrkPathArticle = prodTrkPathArticle;
		this.notes = notes;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "products"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "DH_ID", unique = true, nullable = false)
	public long getDhId() {
		return this.dhId;
	}

	public void setDhId(long dhId) {
		this.dhId = dhId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@Column(name = "PROD_TRK_PATH_ARTICLE", length = 1)
	public Character getProdTrkPathArticle() {
		return this.prodTrkPathArticle;
	}

	public void setProdTrkPathArticle(Character prodTrkPathArticle) {
		this.prodTrkPathArticle = prodTrkPathArticle;
	}

	@Column(name = "NOTES", length = 65535)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
