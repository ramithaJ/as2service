package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Sep 24, 2015 5:21:06 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CoauthorRequestsOoorders generated by hbm2java
 */
@Entity
@Table(name = "coauthor_requests_ooorders", catalog = "as2_app_db", uniqueConstraints = @UniqueConstraint(columnNames = "DH_ID"))
public class CoauthorRequestsOoorders implements java.io.Serializable {

	private Long requestId;
	private Users usersByCreatedBy;
	private Users usersByCoauthUserId;
	private Users usersByUpdatedBy;
	private Products products;
	private String messageFromCoauth;
	private Date createdDate;
	private Date updatedDate;

	public CoauthorRequestsOoorders() {
	}

	public CoauthorRequestsOoorders(Users usersByCreatedBy,
			Users usersByCoauthUserId, Users usersByUpdatedBy,
			Products products, String messageFromCoauth, Date createdDate,
			Date updatedDate) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByCoauthUserId = usersByCoauthUserId;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.products = products;
		this.messageFromCoauth = messageFromCoauth;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "REQUEST_ID", unique = true, nullable = false)
	public Long getRequestId() {
		return this.requestId;
	}

	public void setRequestId(Long requestId) {
		this.requestId = requestId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COAUTH_USER_ID")
	public Users getUsersByCoauthUserId() {
		return this.usersByCoauthUserId;
	}

	public void setUsersByCoauthUserId(Users usersByCoauthUserId) {
		this.usersByCoauthUserId = usersByCoauthUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DH_ID", unique = true)
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@Column(name = "MESSAGE_FROM_COAUTH", length = 1000)
	public String getMessageFromCoauth() {
		return this.messageFromCoauth;
	}

	public void setMessageFromCoauth(String messageFromCoauth) {
		this.messageFromCoauth = messageFromCoauth;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
