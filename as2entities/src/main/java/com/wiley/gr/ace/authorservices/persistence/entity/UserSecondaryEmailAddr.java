package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Sep 24, 2015 5:21:06 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserSecondaryEmailAddr generated by hbm2java
 */
@Entity
@Table(name = "user_secondary_email_addr", catalog = "as2_app_db")
public class UserSecondaryEmailAddr implements java.io.Serializable {

	private Long userSecondaryEmailId;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private Users usersByUserId;
	private String secondaryEmailAddr;
	private Date createdDate;
	private Date updatedDate;
	private Set<UserProfile> userProfiles = new HashSet<UserProfile>(0);

	public UserSecondaryEmailAddr() {
	}

	public UserSecondaryEmailAddr(Users usersByCreatedBy,
			Users usersByUpdatedBy, Users usersByUserId,
			String secondaryEmailAddr, Date createdDate, Date updatedDate,
			Set<UserProfile> userProfiles) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.usersByUserId = usersByUserId;
		this.secondaryEmailAddr = secondaryEmailAddr;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.userProfiles = userProfiles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "USER_SECONDARY_EMAIL_ID", unique = true, nullable = false)
	public Long getUserSecondaryEmailId() {
		return this.userSecondaryEmailId;
	}

	public void setUserSecondaryEmailId(Long userSecondaryEmailId) {
		this.userSecondaryEmailId = userSecondaryEmailId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID")
	public Users getUsersByUserId() {
		return this.usersByUserId;
	}

	public void setUsersByUserId(Users usersByUserId) {
		this.usersByUserId = usersByUserId;
	}

	@Column(name = "SECONDARY_EMAIL_ADDR", length = 100)
	public String getSecondaryEmailAddr() {
		return this.secondaryEmailAddr;
	}

	public void setSecondaryEmailAddr(String secondaryEmailAddr) {
		this.secondaryEmailAddr = secondaryEmailAddr;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userSecondaryEmailAddr")
	public Set<UserProfile> getUserProfiles() {
		return this.userProfiles;
	}

	public void setUserProfiles(Set<UserProfile> userProfiles) {
		this.userProfiles = userProfiles;
	}

}
