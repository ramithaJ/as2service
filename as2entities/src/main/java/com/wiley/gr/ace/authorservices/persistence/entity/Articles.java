package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Jun 18, 2015 11:29:00 AM by Hibernate Tools 4.0.0

import java.sql.Clob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Articles generated by hbm2java
 */
@Entity
@Table(name = "ARTICLES")
public class Articles implements java.io.Serializable {

	private Integer articleId;
	private Journals journals;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private Integer dhId;
	private Character prodTrkPathArticle;
	private String publicationStatus;
	private Clob notes;
	private Character resetLicenseFlg;
	private Character licenseVerificationFlg;
	private Integer userIdSignLicense;
	private Date createdDate;
	private Date updatedDate;
	private Date lastUpdatedInAsFromMaster;
	private Set<InvitationLog> invitationLogs = new HashSet<InvitationLog>(0);
	private Set<ArticleAuthorAssignment> articleAuthorAssignments = new HashSet<ArticleAuthorAssignment>(
			0);
	private Set<SavedOrders> savedOrderses = new HashSet<SavedOrders>(0);

	public Articles() {
	}

	public Articles(Integer articleId) {
		this.articleId = articleId;
	}

	public Articles(Integer articleId, Journals journals,
			Users usersByCreatedBy, Users usersByUpdatedBy, Integer dhId,
			Character prodTrkPathArticle, String publicationStatus, Clob notes,
			Character resetLicenseFlg, Character licenseVerificationFlg,
			Integer userIdSignLicense, Date createdDate, Date updatedDate,
			Date lastUpdatedInAsFromMaster, Set<InvitationLog> invitationLogs,
			Set<ArticleAuthorAssignment> articleAuthorAssignments,
			Set<SavedOrders> savedOrderses) {
		this.articleId = articleId;
		this.journals = journals;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.dhId = dhId;
		this.prodTrkPathArticle = prodTrkPathArticle;
		this.publicationStatus = publicationStatus;
		this.notes = notes;
		this.resetLicenseFlg = resetLicenseFlg;
		this.licenseVerificationFlg = licenseVerificationFlg;
		this.userIdSignLicense = userIdSignLicense;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.lastUpdatedInAsFromMaster = lastUpdatedInAsFromMaster;
		this.invitationLogs = invitationLogs;
		this.articleAuthorAssignments = articleAuthorAssignments;
		this.savedOrderses = savedOrderses;
	}

	@Id
	@Column(name = "ARTICLE_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getArticleId() {
		return this.articleId;
	}

	public void setArticleId(Integer articleId) {
		this.articleId = articleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JOURNAL_ID")
	public Journals getJournals() {
		return this.journals;
	}

	public void setJournals(Journals journals) {
		this.journals = journals;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@Column(name = "DH_ID", precision = 22, scale = 0)
	public Integer getDhId() {
		return this.dhId;
	}

	public void setDhId(Integer dhId) {
		this.dhId = dhId;
	}

	@Column(name = "PROD_TRK_PATH_ARTICLE", length = 1)
	public Character getProdTrkPathArticle() {
		return this.prodTrkPathArticle;
	}

	public void setProdTrkPathArticle(Character prodTrkPathArticle) {
		this.prodTrkPathArticle = prodTrkPathArticle;
	}

	@Column(name = "PUBLICATION_STATUS", length = 50)
	public String getPublicationStatus() {
		return this.publicationStatus;
	}

	public void setPublicationStatus(String publicationStatus) {
		this.publicationStatus = publicationStatus;
	}

	@Column(name = "NOTES")
	public Clob getNotes() {
		return this.notes;
	}

	public void setNotes(Clob notes) {
		this.notes = notes;
	}

	@Column(name = "RESET_LICENSE_FLG", length = 1)
	public Character getResetLicenseFlg() {
		return this.resetLicenseFlg;
	}

	public void setResetLicenseFlg(Character resetLicenseFlg) {
		this.resetLicenseFlg = resetLicenseFlg;
	}

	@Column(name = "LICENSE_VERIFICATION_FLG", length = 1)
	public Character getLicenseVerificationFlg() {
		return this.licenseVerificationFlg;
	}

	public void setLicenseVerificationFlg(Character licenseVerificationFlg) {
		this.licenseVerificationFlg = licenseVerificationFlg;
	}

	@Column(name = "USER_ID_SIGN_LICENSE", precision = 22, scale = 0)
	public Integer getUserIdSignLicense() {
		return this.userIdSignLicense;
	}

	public void setUserIdSignLicense(Integer userIdSignLicense) {
		this.userIdSignLicense = userIdSignLicense;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATED_DATE", length = 7)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "UPDATED_DATE", length = 7)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_UPDATED_IN_AS_FROM_MASTER", length = 7)
	public Date getLastUpdatedInAsFromMaster() {
		return this.lastUpdatedInAsFromMaster;
	}

	public void setLastUpdatedInAsFromMaster(Date lastUpdatedInAsFromMaster) {
		this.lastUpdatedInAsFromMaster = lastUpdatedInAsFromMaster;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "articles")
	public Set<InvitationLog> getInvitationLogs() {
		return this.invitationLogs;
	}

	public void setInvitationLogs(Set<InvitationLog> invitationLogs) {
		this.invitationLogs = invitationLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "articles")
	public Set<ArticleAuthorAssignment> getArticleAuthorAssignments() {
		return this.articleAuthorAssignments;
	}

	public void setArticleAuthorAssignments(
			Set<ArticleAuthorAssignment> articleAuthorAssignments) {
		this.articleAuthorAssignments = articleAuthorAssignments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "articles")
	public Set<SavedOrders> getSavedOrderses() {
		return this.savedOrderses;
	}

	public void setSavedOrderses(Set<SavedOrders> savedOrderses) {
		this.savedOrderses = savedOrderses;
	}

}
