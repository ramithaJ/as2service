package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated May 26, 2015 2:39:51 PM by Hibernate Tools 3.4.0.CR1

import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AuthorProfile generated by hbm2java
 */
@Entity
@Table(name = "AUTHOR_PROFILE")
public class AuthorProfile implements java.io.Serializable {

	private Integer userId;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private Users usersByMergerAccntId;
	private Users usersByUserId;
	private UserSecondaryEmailAddr userSecondaryEmailAddr;
	private String titleCd;
	private String middleName;
	private String suffixCd;
	private String alternativeName;
	private String industryCd;
	private String jobCategoryCd;
	private String optInPromoteFlg;
	private Blob profilePic;
	private Character isAccountActive;
	private Character isAccountVerified;
	private Character cdmUpdstatus;
	private Character profileVisibleFlg;
	private Date createdDate;
	private Date updatedDate;
	private Set userAreaOfInterests = new HashSet(0);
	private Set userAffiliationses = new HashSet(0);
	private Set authColleagueDetailsesForInvitedAuthorId = new HashSet(0);
	private Set authCoauthDetailsesForCoauthUserId = new HashSet(0);
	private Set additionalPermissionses = new HashSet(0);
	private Set userFunderGrantses = new HashSet(0);
	private Set userProfileAttribVisibles = new HashSet(0);
	private Set authCoauthDetailsesForAuthorId = new HashSet(0);
	private Set userAlertses = new HashSet(0);
	private Set userSocietyDetailses = new HashSet(0);
	private Set authColleagueDetailsesForColleagueUserId = new HashSet(0);
	private Set userWoaAccountses = new HashSet(0);
	private Set userPreferredJournalses = new HashSet(0);

	public AuthorProfile() {
	}

	public AuthorProfile(Users usersByUserId) {
		this.usersByUserId = usersByUserId;
	}

	public AuthorProfile(Users usersByCreatedBy, Users usersByUpdatedBy,
			Users usersByMergerAccntId, Users usersByUserId,
			UserSecondaryEmailAddr userSecondaryEmailAddr, String titleCd,
			String middleName, String suffixCd, String alternativeName,
			String industryCd, String jobCategoryCd, String optInPromoteFlg,
			Blob profilePic, Character isAccountActive,
			Character isAccountVerified, Character cdmUpdstatus,
			Character profileVisibleFlg, Date createdDate, Date updatedDate,
			Set userAreaOfInterests, Set userAffiliationses,
			Set authColleagueDetailsesForInvitedAuthorId,
			Set authCoauthDetailsesForCoauthUserId,
			Set additionalPermissionses, Set userFunderGrantses,
			Set userProfileAttribVisibles, Set authCoauthDetailsesForAuthorId,
			Set userAlertses, Set userSocietyDetailses,
			Set authColleagueDetailsesForColleagueUserId,
			Set userWoaAccountses, Set userPreferredJournalses) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.usersByMergerAccntId = usersByMergerAccntId;
		this.usersByUserId = usersByUserId;
		this.userSecondaryEmailAddr = userSecondaryEmailAddr;
		this.titleCd = titleCd;
		this.middleName = middleName;
		this.suffixCd = suffixCd;
		this.alternativeName = alternativeName;
		this.industryCd = industryCd;
		this.jobCategoryCd = jobCategoryCd;
		this.optInPromoteFlg = optInPromoteFlg;
		this.profilePic = profilePic;
		this.isAccountActive = isAccountActive;
		this.isAccountVerified = isAccountVerified;
		this.cdmUpdstatus = cdmUpdstatus;
		this.profileVisibleFlg = profileVisibleFlg;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.userAreaOfInterests = userAreaOfInterests;
		this.userAffiliationses = userAffiliationses;
		this.authColleagueDetailsesForInvitedAuthorId = authColleagueDetailsesForInvitedAuthorId;
		this.authCoauthDetailsesForCoauthUserId = authCoauthDetailsesForCoauthUserId;
		this.additionalPermissionses = additionalPermissionses;
		this.userFunderGrantses = userFunderGrantses;
		this.userProfileAttribVisibles = userProfileAttribVisibles;
		this.authCoauthDetailsesForAuthorId = authCoauthDetailsesForAuthorId;
		this.userAlertses = userAlertses;
		this.userSocietyDetailses = userSocietyDetailses;
		this.authColleagueDetailsesForColleagueUserId = authColleagueDetailsesForColleagueUserId;
		this.userWoaAccountses = userWoaAccountses;
		this.userPreferredJournalses = userPreferredJournalses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "usersByUserId"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "USER_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MERGER_ACCNT_ID")
	public Users getUsersByMergerAccntId() {
		return this.usersByMergerAccntId;
	}

	public void setUsersByMergerAccntId(Users usersByMergerAccntId) {
		this.usersByMergerAccntId = usersByMergerAccntId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Users getUsersByUserId() {
		return this.usersByUserId;
	}

	public void setUsersByUserId(Users usersByUserId) {
		this.usersByUserId = usersByUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ALERT_PREF_EMAILID")
	public UserSecondaryEmailAddr getUserSecondaryEmailAddr() {
		return this.userSecondaryEmailAddr;
	}

	public void setUserSecondaryEmailAddr(
			UserSecondaryEmailAddr userSecondaryEmailAddr) {
		this.userSecondaryEmailAddr = userSecondaryEmailAddr;
	}

	@Column(name = "TITLE_CD", length = 50)
	public String getTitleCd() {
		return this.titleCd;
	}

	public void setTitleCd(String titleCd) {
		this.titleCd = titleCd;
	}

	@Column(name = "MIDDLE_NAME", length = 50)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "SUFFIX_CD", length = 50)
	public String getSuffixCd() {
		return this.suffixCd;
	}

	public void setSuffixCd(String suffixCd) {
		this.suffixCd = suffixCd;
	}

	@Column(name = "ALTERNATIVE_NAME", length = 100)
	public String getAlternativeName() {
		return this.alternativeName;
	}

	public void setAlternativeName(String alternativeName) {
		this.alternativeName = alternativeName;
	}

	@Column(name = "INDUSTRY_CD", length = 6)
	public String getIndustryCd() {
		return this.industryCd;
	}

	public void setIndustryCd(String industryCd) {
		this.industryCd = industryCd;
	}

	@Column(name = "JOB_CATEGORY_CD", length = 7)
	public String getJobCategoryCd() {
		return this.jobCategoryCd;
	}

	public void setJobCategoryCd(String jobCategoryCd) {
		this.jobCategoryCd = jobCategoryCd;
	}

	@Column(name = "OPT_IN_PROMOTE_FLG", length = 5)
	public String getOptInPromoteFlg() {
		return this.optInPromoteFlg;
	}

	public void setOptInPromoteFlg(String optInPromoteFlg) {
		this.optInPromoteFlg = optInPromoteFlg;
	}

	@Column(name = "PROFILE_PIC")
	public Blob getProfilePic() {
		return this.profilePic;
	}

	public void setProfilePic(Blob profilePic) {
		this.profilePic = profilePic;
	}

	@Column(name = "IS_ACCOUNT_ACTIVE", length = 1)
	public Character getIsAccountActive() {
		return this.isAccountActive;
	}

	public void setIsAccountActive(Character isAccountActive) {
		this.isAccountActive = isAccountActive;
	}

	@Column(name = "IS_ACCOUNT_VERIFIED", length = 1)
	public Character getIsAccountVerified() {
		return this.isAccountVerified;
	}

	public void setIsAccountVerified(Character isAccountVerified) {
		this.isAccountVerified = isAccountVerified;
	}

	@Column(name = "CDM_UPDSTATUS", length = 1)
	public Character getCdmUpdstatus() {
		return this.cdmUpdstatus;
	}

	public void setCdmUpdstatus(Character cdmUpdstatus) {
		this.cdmUpdstatus = cdmUpdstatus;
	}

	@Column(name = "PROFILE_VISIBLE_FLG", length = 1)
	public Character getProfileVisibleFlg() {
		return this.profileVisibleFlg;
	}

	public void setProfileVisibleFlg(Character profileVisibleFlg) {
		this.profileVisibleFlg = profileVisibleFlg;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserAreaOfInterests() {
		return this.userAreaOfInterests;
	}

	public void setUserAreaOfInterests(Set userAreaOfInterests) {
		this.userAreaOfInterests = userAreaOfInterests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserAffiliationses() {
		return this.userAffiliationses;
	}

	public void setUserAffiliationses(Set userAffiliationses) {
		this.userAffiliationses = userAffiliationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByInvitedAuthorId")
	public Set getAuthColleagueDetailsesForInvitedAuthorId() {
		return this.authColleagueDetailsesForInvitedAuthorId;
	}

	public void setAuthColleagueDetailsesForInvitedAuthorId(
			Set authColleagueDetailsesForInvitedAuthorId) {
		this.authColleagueDetailsesForInvitedAuthorId = authColleagueDetailsesForInvitedAuthorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByCoauthUserId")
	public Set getAuthCoauthDetailsesForCoauthUserId() {
		return this.authCoauthDetailsesForCoauthUserId;
	}

	public void setAuthCoauthDetailsesForCoauthUserId(
			Set authCoauthDetailsesForCoauthUserId) {
		this.authCoauthDetailsesForCoauthUserId = authCoauthDetailsesForCoauthUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getAdditionalPermissionses() {
		return this.additionalPermissionses;
	}

	public void setAdditionalPermissionses(Set additionalPermissionses) {
		this.additionalPermissionses = additionalPermissionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserFunderGrantses() {
		return this.userFunderGrantses;
	}

	public void setUserFunderGrantses(Set userFunderGrantses) {
		this.userFunderGrantses = userFunderGrantses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserProfileAttribVisibles() {
		return this.userProfileAttribVisibles;
	}

	public void setUserProfileAttribVisibles(Set userProfileAttribVisibles) {
		this.userProfileAttribVisibles = userProfileAttribVisibles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByAuthorId")
	public Set getAuthCoauthDetailsesForAuthorId() {
		return this.authCoauthDetailsesForAuthorId;
	}

	public void setAuthCoauthDetailsesForAuthorId(
			Set authCoauthDetailsesForAuthorId) {
		this.authCoauthDetailsesForAuthorId = authCoauthDetailsesForAuthorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserAlertses() {
		return this.userAlertses;
	}

	public void setUserAlertses(Set userAlertses) {
		this.userAlertses = userAlertses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserSocietyDetailses() {
		return this.userSocietyDetailses;
	}

	public void setUserSocietyDetailses(Set userSocietyDetailses) {
		this.userSocietyDetailses = userSocietyDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByColleagueUserId")
	public Set getAuthColleagueDetailsesForColleagueUserId() {
		return this.authColleagueDetailsesForColleagueUserId;
	}

	public void setAuthColleagueDetailsesForColleagueUserId(
			Set authColleagueDetailsesForColleagueUserId) {
		this.authColleagueDetailsesForColleagueUserId = authColleagueDetailsesForColleagueUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserWoaAccountses() {
		return this.userWoaAccountses;
	}

	public void setUserWoaAccountses(Set userWoaAccountses) {
		this.userWoaAccountses = userWoaAccountses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set getUserPreferredJournalses() {
		return this.userPreferredJournalses;
	}

	public void setUserPreferredJournalses(Set userPreferredJournalses) {
		this.userPreferredJournalses = userPreferredJournalses;
	}

}
