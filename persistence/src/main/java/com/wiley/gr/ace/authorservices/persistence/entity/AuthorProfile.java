package com.wiley.gr.ace.authorservices.persistence.entity;

import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AuthorProfile generated by hbm2java
 */
@Entity
@Table(name = "AUTHOR_PROFILE")
public class AuthorProfile implements java.io.Serializable {

	private Integer userId;
	private Users users;
	private Character optInActivatedFlg;
	private Character termsOfUseFlg;
	private Character securityQuestFlg;
	private String typeOfConsent;
	private Character isAccountActive;
	private Character billingAddrFlg;
	private Character shippingAdrFlg;
	private String ipAddress;
	private Character isAccountVerified;
	private Integer mergerAccntId;
	private Blob profilePic;
	private String alternativeName;
	private Character isAccountLocked;
	private Integer invalidLoginCnt;
	private Date accountLockedTime;
	private Date lastLoginDate;
	private Date lastActivityDate;
	private Date createdDate;
	private String createdBy;
	private Date updatedDate;
	private String updatedBy;
	private Set<AuthCoauthDetails> authCoauthDetailsesForAuthorId = new HashSet<AuthCoauthDetails>(
			0);
	private Set<UserAlerts> userAlertses = new HashSet<UserAlerts>(0);
	private Set<AuthColleagueDetails> authColleagueDetailsesForInvitedAuthorId = new HashSet<AuthColleagueDetails>(
			0);
	private Set<UserSecurityDetails> userSecurityDetailses = new HashSet<UserSecurityDetails>(
			0);
	private Set<AuthCoauthDetails> authCoauthDetailsesForCoauthUserId = new HashSet<AuthCoauthDetails>(
			0);
	private Set<AuthColleagueDetails> authColleagueDetailsesForColleagueUserId = new HashSet<AuthColleagueDetails>(
			0);
	private Set<SocietyDetails> societyDetailses = new HashSet<SocietyDetails>(
			0);
	private Set<UserFunderGrants> userFunderGrantses = new HashSet<UserFunderGrants>(
			0);
	private Set<UserProfileAttribVisible> userProfileAttribVisibles = new HashSet<UserProfileAttribVisible>(
			0);
	private Set<UserPreferredJournals> userPreferredJournalses = new HashSet<UserPreferredJournals>(
			0);

	public AuthorProfile() {
	}

	public AuthorProfile(Users users) {
		this.users = users;
	}

	public AuthorProfile(Users users, Character optInActivatedFlg,
			Character termsOfUseFlg, Character securityQuestFlg,
			String typeOfConsent, Character isAccountActive,
			Character billingAddrFlg, Character shippingAdrFlg,
			String ipAddress, Character isAccountVerified,
			Integer mergerAccntId, Blob profilePic, String alternativeName,
			Character isAccountLocked, Integer invalidLoginCnt,
			Date accountLockedTime, Date lastLoginDate, Date lastActivityDate,
			Date createdDate, String createdBy, Date updatedDate,
			String updatedBy,
			Set<AuthCoauthDetails> authCoauthDetailsesForAuthorId,
			Set<UserAlerts> userAlertses,
			Set<AuthColleagueDetails> authColleagueDetailsesForInvitedAuthorId,
			Set<UserSecurityDetails> userSecurityDetailses,
			Set<AuthCoauthDetails> authCoauthDetailsesForCoauthUserId,
			Set<AuthColleagueDetails> authColleagueDetailsesForColleagueUserId,
			Set<SocietyDetails> societyDetailses,
			Set<UserFunderGrants> userFunderGrantses,
			Set<UserProfileAttribVisible> userProfileAttribVisibles,
			Set<UserPreferredJournals> userPreferredJournalses) {
		this.users = users;
		this.optInActivatedFlg = optInActivatedFlg;
		this.termsOfUseFlg = termsOfUseFlg;
		this.securityQuestFlg = securityQuestFlg;
		this.typeOfConsent = typeOfConsent;
		this.isAccountActive = isAccountActive;
		this.billingAddrFlg = billingAddrFlg;
		this.shippingAdrFlg = shippingAdrFlg;
		this.ipAddress = ipAddress;
		this.isAccountVerified = isAccountVerified;
		this.mergerAccntId = mergerAccntId;
		this.profilePic = profilePic;
		this.alternativeName = alternativeName;
		this.isAccountLocked = isAccountLocked;
		this.invalidLoginCnt = invalidLoginCnt;
		this.accountLockedTime = accountLockedTime;
		this.lastLoginDate = lastLoginDate;
		this.lastActivityDate = lastActivityDate;
		this.createdDate = createdDate;
		this.createdBy = createdBy;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
		this.authCoauthDetailsesForAuthorId = authCoauthDetailsesForAuthorId;
		this.userAlertses = userAlertses;
		this.authColleagueDetailsesForInvitedAuthorId = authColleagueDetailsesForInvitedAuthorId;
		this.userSecurityDetailses = userSecurityDetailses;
		this.authCoauthDetailsesForCoauthUserId = authCoauthDetailsesForCoauthUserId;
		this.authColleagueDetailsesForColleagueUserId = authColleagueDetailsesForColleagueUserId;
		this.societyDetailses = societyDetailses;
		this.userFunderGrantses = userFunderGrantses;
		this.userProfileAttribVisibles = userProfileAttribVisibles;
		this.userPreferredJournalses = userPreferredJournalses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "users"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "USER_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "OPT_IN_ACTIVATED_FLG", length = 1)
	public Character getOptInActivatedFlg() {
		return this.optInActivatedFlg;
	}

	public void setOptInActivatedFlg(Character optInActivatedFlg) {
		this.optInActivatedFlg = optInActivatedFlg;
	}

	@Column(name = "TERMS_OF_USE_FLG", length = 1)
	public Character getTermsOfUseFlg() {
		return this.termsOfUseFlg;
	}

	public void setTermsOfUseFlg(Character termsOfUseFlg) {
		this.termsOfUseFlg = termsOfUseFlg;
	}

	@Column(name = "SECURITY_QUEST_FLG", length = 1)
	public Character getSecurityQuestFlg() {
		return this.securityQuestFlg;
	}

	public void setSecurityQuestFlg(Character securityQuestFlg) {
		this.securityQuestFlg = securityQuestFlg;
	}

	@Column(name = "TYPE_OF_CONSENT", length = 50)
	public String getTypeOfConsent() {
		return this.typeOfConsent;
	}

	public void setTypeOfConsent(String typeOfConsent) {
		this.typeOfConsent = typeOfConsent;
	}

	@Column(name = "IS_ACCOUNT_ACTIVE", length = 1)
	public Character getIsAccountActive() {
		return this.isAccountActive;
	}

	public void setIsAccountActive(Character isAccountActive) {
		this.isAccountActive = isAccountActive;
	}

	@Column(name = "BILLING_ADDR_FLG", length = 1)
	public Character getBillingAddrFlg() {
		return this.billingAddrFlg;
	}

	public void setBillingAddrFlg(Character billingAddrFlg) {
		this.billingAddrFlg = billingAddrFlg;
	}

	@Column(name = "SHIPPING_ADR_FLG", length = 1)
	public Character getShippingAdrFlg() {
		return this.shippingAdrFlg;
	}

	public void setShippingAdrFlg(Character shippingAdrFlg) {
		this.shippingAdrFlg = shippingAdrFlg;
	}

	@Column(name = "IP_ADDRESS", length = 50)
	public String getIpAddress() {
		return this.ipAddress;
	}

	public void setIpAddress(String ipAddress) {
		this.ipAddress = ipAddress;
	}

	@Column(name = "IS_ACCOUNT_VERIFIED", length = 1)
	public Character getIsAccountVerified() {
		return this.isAccountVerified;
	}

	public void setIsAccountVerified(Character isAccountVerified) {
		this.isAccountVerified = isAccountVerified;
	}

	@Column(name = "MERGER_ACCNT_ID", precision = 22, scale = 0)
	public Integer getMergerAccntId() {
		return this.mergerAccntId;
	}

	public void setMergerAccntId(Integer mergerAccntId) {
		this.mergerAccntId = mergerAccntId;
	}

	@Column(name = "PROFILE_PIC")
	public Blob getProfilePic() {
		return this.profilePic;
	}

	public void setProfilePic(Blob profilePic) {
		this.profilePic = profilePic;
	}

	@Column(name = "ALTERNATIVE_NAME", length = 200)
	public String getAlternativeName() {
		return this.alternativeName;
	}

	public void setAlternativeName(String alternativeName) {
		this.alternativeName = alternativeName;
	}

	@Column(name = "IS_ACCOUNT_LOCKED", length = 1)
	public Character getIsAccountLocked() {
		return this.isAccountLocked;
	}

	public void setIsAccountLocked(Character isAccountLocked) {
		this.isAccountLocked = isAccountLocked;
	}

	@Column(name = "INVALID_LOGIN_CNT", precision = 2, scale = 0)
	public Integer getInvalidLoginCnt() {
		return this.invalidLoginCnt;
	}

	public void setInvalidLoginCnt(Integer invalidLoginCnt) {
		this.invalidLoginCnt = invalidLoginCnt;
	}

	@Column(name = "ACCOUNT_LOCKED_TIME")
	public Date getAccountLockedTime() {
		return this.accountLockedTime;
	}

	public void setAccountLockedTime(Date accountLockedTime) {
		this.accountLockedTime = accountLockedTime;
	}

	@Column(name = "LAST_LOGIN_DATE")
	public Date getLastLoginDate() {
		return this.lastLoginDate;
	}

	public void setLastLoginDate(Date lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	@Column(name = "LAST_ACTIVITY_DATE")
	public Date getLastActivityDate() {
		return this.lastActivityDate;
	}

	public void setLastActivityDate(Date lastActivityDate) {
		this.lastActivityDate = lastActivityDate;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CREATED_BY", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "UPDATED_BY", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByAuthorId")
	public Set<AuthCoauthDetails> getAuthCoauthDetailsesForAuthorId() {
		return this.authCoauthDetailsesForAuthorId;
	}

	public void setAuthCoauthDetailsesForAuthorId(
			Set<AuthCoauthDetails> authCoauthDetailsesForAuthorId) {
		this.authCoauthDetailsesForAuthorId = authCoauthDetailsesForAuthorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set<UserAlerts> getUserAlertses() {
		return this.userAlertses;
	}

	public void setUserAlertses(Set<UserAlerts> userAlertses) {
		this.userAlertses = userAlertses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByInvitedAuthorId")
	public Set<AuthColleagueDetails> getAuthColleagueDetailsesForInvitedAuthorId() {
		return this.authColleagueDetailsesForInvitedAuthorId;
	}

	public void setAuthColleagueDetailsesForInvitedAuthorId(
			Set<AuthColleagueDetails> authColleagueDetailsesForInvitedAuthorId) {
		this.authColleagueDetailsesForInvitedAuthorId = authColleagueDetailsesForInvitedAuthorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set<UserSecurityDetails> getUserSecurityDetailses() {
		return this.userSecurityDetailses;
	}

	public void setUserSecurityDetailses(
			Set<UserSecurityDetails> userSecurityDetailses) {
		this.userSecurityDetailses = userSecurityDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByCoauthUserId")
	public Set<AuthCoauthDetails> getAuthCoauthDetailsesForCoauthUserId() {
		return this.authCoauthDetailsesForCoauthUserId;
	}

	public void setAuthCoauthDetailsesForCoauthUserId(
			Set<AuthCoauthDetails> authCoauthDetailsesForCoauthUserId) {
		this.authCoauthDetailsesForCoauthUserId = authCoauthDetailsesForCoauthUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfileByColleagueUserId")
	public Set<AuthColleagueDetails> getAuthColleagueDetailsesForColleagueUserId() {
		return this.authColleagueDetailsesForColleagueUserId;
	}

	public void setAuthColleagueDetailsesForColleagueUserId(
			Set<AuthColleagueDetails> authColleagueDetailsesForColleagueUserId) {
		this.authColleagueDetailsesForColleagueUserId = authColleagueDetailsesForColleagueUserId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "USER_SOCIETY_DETAILS", joinColumns = { @JoinColumn(name = "USER_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "SOCIETY_ID", nullable = false, updatable = false) })
	public Set<SocietyDetails> getSocietyDetailses() {
		return this.societyDetailses;
	}

	public void setSocietyDetailses(Set<SocietyDetails> societyDetailses) {
		this.societyDetailses = societyDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set<UserFunderGrants> getUserFunderGrantses() {
		return this.userFunderGrantses;
	}

	public void setUserFunderGrantses(Set<UserFunderGrants> userFunderGrantses) {
		this.userFunderGrantses = userFunderGrantses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set<UserProfileAttribVisible> getUserProfileAttribVisibles() {
		return this.userProfileAttribVisibles;
	}

	public void setUserProfileAttribVisibles(
			Set<UserProfileAttribVisible> userProfileAttribVisibles) {
		this.userProfileAttribVisibles = userProfileAttribVisibles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authorProfile")
	public Set<UserPreferredJournals> getUserPreferredJournalses() {
		return this.userPreferredJournalses;
	}

	public void setUserPreferredJournalses(
			Set<UserPreferredJournals> userPreferredJournalses) {
		this.userPreferredJournalses = userPreferredJournalses;
	}

}
